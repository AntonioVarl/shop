@model IndexModel;
@{
    ViewData["Title"] = "Home Page";
    var products = Model.Products;
}

<div class="text-center">
    <table id="products">
        <tr>
            <th>Id</th>
            <th>Название</th>
            <th>Описание</th>
            <th>Цена</th>
            <th>Количество</th>
            <th>Действия</th>
        </tr>
        @for (int i = 0; i < products.Count; i++)
        {
           
            <tr id="product_@i">
                <td>
                    <div id="id_text_@i">@products[i].Id</div>
                </td>
                <td>
                    <div id="name_text_@i">@products[i].Name</div>
                </td>
                <td>
                    <div id="description_text_@i">@products[i].Description</div>
                </td>
                <td>
                    <div id="price_text_@i">@products[i].Price</div>
                </td>
                <td>
                    <div id="count_text_@i">@products[i].Count</div>
                </td>
                <td>
                    <button id="edit_button_@i" onclick="onEditClick(@i)">✎</button>
                    <button id="refresh_button_@i" onclick="onRefreshClick(@i)">⟳</button>
                    <button id="delete_button_@i" onclick="onDeleteProductClick(@i)">⌫</button>
                </td>
            </tr>
        }
    </table>
    <h3>Добавить продукт</h3>
    <form id="createProductForm">
        Название продукта:<br/>
        <input type="text" name="Name" value=""/><br/>
        Описание:<br/>
        <input type="text" name="Description" value=""/><br/>
        Цена за штуку:<br/>
        <input type="number" min="0" step="0.01" name="Price" value=""/><br/>
        Количество:<br/>
        <input type="number" min="0" name="Count" value=""/><br/>
       <button type="button" onclick="onCreateClick()">Сохранить</button>
    </form>
</div>

<script>
    async function onCreateClick() {
        let form = document.getElementById(`createProductForm`);
        form.Price.value = form.Price.value.replace(/,/g,`.`);
        let formData = new FormData(form);
        form.reset();
        let jsonData = {};
        formData.forEach((value, key) => {
        jsonData[key] = value;    
        });
        
        let response = await fetch("product",{
            method: "POST",
            headers: {
                       'Content-Type': 'application/json;charset=utf-8'
                      },
            body: JSON.stringify(jsonData) 
                             });
            let createProduct = await response.json();
            updateTable(createProduct);
        }
        
       
    async function onRefreshClick(i) {
        let response = await fetch(`product/${i}`);
        let product = await response.json();
              
        setProduct(i,  product);
    }
   
     
    async function onSendUpdateClick(i){
        let updatedProduct = getProduct(i);
        let response = await fetch(`product/${i}`,  {
            method: "POST",
            headers: {
                'Content-Type': 'application/json;charset=utf-8'
            },
            body: JSON.stringify(updatedProduct) 
        });
        
        let updatedProductFromServer = await response.json();
          
        setProduct(i, updatedProductFromServer);
          
        let sendButton = document.getElementById(`send_button_${i}`);
        let cancelButton = document.getElementById(`cansel_button_${i}`);
          
        let editButton = replaceButton("edit", "✎", i);
        editButton.onclick = () => { onEditClick(i);}  
             
        let refreshButton = replaceButton("refresh", "⟳", i);
        refreshButton.onclick = () => {onRefreshClick(i);}
          
        sendButton.replaceWith(editButton);
        cancelButton.replaceWith(refreshButton);
    }
            
    async function onDeleteProductClick(i){
        let productId = document.getElementById(`id_text_${i}`).innerText;
          
        let response = await fetch(`/product/${productId}`, {
            method: 'DELETE'
        });
        
        if (response.ok){
            document.querySelector(`#id_text_${i}`).closest('tr').remove();
        }          
    }
    
    function onEditClick(i) {
            createInput(i, "name");
            createInput(i, "description");
            createInput(i, "price");
            createInput(i, "count");
                
            let editButton = document.getElementById(`edit_button_${i}`);
            
            let sendButton = replaceButton("send", "✓", i);
             sendButton.onclick = () => {onSendUpdateClick(i);}
            
            let cancelButton = replaceButton("cansel", "✖", i);
            cancelButton.onclick = () => {onCancelClick(i);};
                        
            let refreshButton = document.getElementById(`refresh_button_${i}`);
            
            editButton.replaceWith(sendButton);
            refreshButton.replaceWith(cancelButton);
        }
    
    function onCancelClick(i) {
            let sendButton = document.getElementById(`send_button_${i}`);
            let cancelButton = document.getElementById(`cansel_button_${i}`);
                     
            let editButton = replaceButton("edit", "✎", i);
            editButton.onclick = () => {onEditClick(i);}
                  
            let refreshButton = replaceButton("refresh", "⟳", i);
            refreshButton.onclick = () => {onRefreshClick(i);}
                     
            sendButton.replaceWith(editButton);
            cancelButton.replaceWith(refreshButton);
            deleteInput(i, "name");
            deleteInput(i, "description");
            deleteInput(i, "price");
            deleteInput(i, "count");      
        }
    
     function updateTable(newProduct) {
            let table = document.getElementById("products");
            let newRow = table.insertRow(-1);
            newRow.id = `product_${@products.Count}`;
            
            let idCell = newRow.insertCell(0);
            idCell.id = `id_text_${@products.Count}`;
            idCell.innerText = newProduct.id;
            
             let nameCell = newRow.insertCell(1);
             nameCell.id = `name_text_${@products.Count}`;
             nameCell.innerText = newProduct.name;
             
             let descriptionCell = newRow.insertCell(2);
             descriptionCell.id = `description_text_${@products.Count}`;
             descriptionCell.innerText = newProduct.description;
            
             let priceCell = newRow.insertCell(3);
              priceCell.id = `price_text_${@products.Count}`;
              priceCell.innerText = newProduct.price;
              
              let countCell = newRow.insertCell(4);
              countCell.id = `count_text_${@products.Count}`;
              countCell.innerText = newProduct.count;
              
              let actionCell = newRow.insertCell(5);
              actionCell.innerHTML = '<button id="edit_button_' +@products.Count + '" onclick="onEditClick(' + @products.Count  +  ')">✎</button>' + ' ' + 
                                       '<button id="refresh_button_' + @products.Count + '" onclick="onRefreshClick(' + @products.Count +  ')">⟳</button>' + ' '  + ' ' +
                                       '<button id="delete_button_' + @products.Count + '" onclick="onDeleteProductClick(' + @products.Count +  ')">⌫</button>';
            }
             
    function setProduct(id, product) {
        let nameText = document.getElementById(`name_text_${id}`);
        nameText.innerText = product.name;
        
        let descriptionText = document.getElementById(`description_text_${id}`);
        descriptionText.innerText = product.description;
        
        let priceText = document.getElementById(`price_text_${id}`);
        priceText.innerText = product.price;
        
        let countText = document.getElementById(`count_text_${id}`);
        countText.innerText = product.count;
    }
                 
    function getProduct(id) {
        let nameInput = document.getElementById(`name_input_${id}`);
        let name = nameInput.value;
        
        let descriptionInput = document.getElementById(`description_input_${id}`);
        let description = descriptionInput.value;
        
        let priceInput = document.getElementById(`price_input_${id}`);
        let price = priceInput.value;
        
        let countInput = document.getElementById(`count_input_${id}`);
        let count = countInput.value;
                
        return { 
            name, 
            description,
            price,
            count
        };
    }
                     
    function replaceButton(button, textButton, i){
        let newButton = document.createElement("button");
        newButton.id = `${button}_button_${i}`;
        newButton.innerText = textButton;
        return newButton;
    }
    
    function createInput(i, elementName) {
            let elementText = document.getElementById(`${elementName}_text_${i}`);
            let elementInput = document.createElement("input");
            elementInput.id = `${elementName}_input_${i}`;
            elementInput.value = elementText.innerText;
            elementText.innerHTML = "";
            elementText.appendChild(elementInput);
        }
        
    function deleteInput(i, element){
             let elementInput = document.getElementById(`${element}_input_${i}`);
             let elementText = document.createElement("div");
             elementText.id = `${element}_text_${i}`;
             elementText.innerText = elementInput.value;
             
             elementInput.parentNode.replaceChildren(elementText);
     }
</script>
